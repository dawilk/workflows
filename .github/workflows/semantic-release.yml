name: Semantic Release

on:
  workflow_call:
    secrets:
      GITHUB_TOKEN:
        required: true
        description: "The token used by semantic-release to create a GitHub Release / Tag"
      NODE_AUTH_TOKEN:
        description: 'NPM Token used for publishing to npmjs'
        required: false
    inputs:
      dry_run:
        default: false
        description: "Only generate next version value; do not create a GitHub Release / Tag"
        type: string
        required: false
    outputs:
      version:
        description: "The version created by semantic-release action"
        value: ${{ jobs.semantic-release.outputs.version }}

defaults:
  run:
    shell: bash

jobs:
  semantic-release:
    name: Semantic Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        persist-credentials: false

    - name: Get HEAD branch
      run: echo "GITHUB_BRANCH=$(echo $GITHUB_REF | sed 's/refs\/heads\///g')" >> $GITHUB_ENV

    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v3
      id: semantic
      with:
        branches: ${{ env.GITHUB_BRANCH }}
        dry_run: ${{ inputs.dry_run }}
        semantic_version: 19
        extra_plugins: |
          @semantic-release/changelog@6
          @semantic-release/git@10
          conventional-changelog-conventionalcommits@5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NPM_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        HUSKY: 0

    - name: Set Step Summary
      env:
        VERSION: ${{steps.semantic.outputs.new_release_version}}
      run: |
        if [[ -z "$VERSION" ]]; then
          echo "### No Conventional Commits | No release commits analyzed" >> $GITHUB_STEP_SUMMARY
        else
          echo "### Next Version will be $VERSION" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.semantic.outputs.new_release_notes }}" >> $GITHUB_STEP_SUMMARY
          if "${{ inputs.dry_run }}"; then
            echo "No release action taken. (This was a dry_run.)" >> $GITHUB_STEP_SUMMARY
          fi
        fi
